// simplest case
x = 10
plus_5 = () => x + 5
printl(plus_5())

// taking in args
x = 12
my_closure = y => x + y
printl(my_closure(-5))


// returning a closure from a child scope
a = 13
my_closure = {
    b = 10
    fn = c => a + b + c // uses `b` from this scope and `a` from parent scope
    @fn
}
printl(my_closure(5))



// print the handle to the closure itself
printl(@my_closure)