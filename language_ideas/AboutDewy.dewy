/{
This document describes the general intent of the Dewy language

The goal of Dewy is to provide a simple and elegent language. This includes things like:
-minimal punctuation, especially unnecesary things like ";" at the end of statements
-very modular fundamental features, which can be combined and provide emergent properties
...The combinations of these features should be elegent, and generally useful
-

In addition to the main goal, Dewy is designed to be a language for engineering. This includes things like:
-strong unit support
-a large library of useful engineering functionality
-good support for things like vectors, matricies, and tensors
-ideally would have a good symbolic math system


Other things:
-should be generally quick to write, similar to python's fast prototyping speed
...in general use, assumptions will be made such that this is the case
-should also allow very fine low level control should the programmer request it


I think the way I'm going to make the final specification of the language is by writing code with it, and keeping only the constructs which I generally need/use


the language should have strong support for error/warning handling
-warnings will occur when bad practices/other dangerous actions are being taken
...the printout for a warning will also include how to disable the warning
...e.g. if a warning is thrown it would say "to eliminate this exact warning, paste the following code on line <line #>: <code to turn off warning>
 to block all instances of this warning, paste the following code at the beginning of your script: <code to turn off that warning type>"
...
}/



