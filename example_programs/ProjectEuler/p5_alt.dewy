/{
2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.

What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
}/

//alternate solution using dictionaries to store the prime factorization rather than lists

main
{
    factors = [].dict   //keys are the prime factor, values are the multiplicity
    
    loop i in 2:20 factors = combine_pfactors(factors, pfactorize(i))
    
    total = 1
    loop v in factors.keys total *= v^factors[v]
    
    print(total)
}



primes = [2 3].dll  //initial creation of the list of primes. will be updated as needed

pfactorize(int num)
{
    //create a dictionary of the prime factors
    
    //if not enough prime factors, add more to the list
    update_primes_list(num)
    
    factors = [].dict
    
    loop p in primes
        loop num % p =? 0
        {
            if factors.contains(p)
                factors[p]++
            else
                factors.add(p, 1)
            
            num /= p
        }
    
    return factors
}


update_primes_list(num)
{
    //update the primes list to contain prime factors up to sqrt(num)
    #loop1 loop i in primes[-0]+2 : num^.5 : 2  
    //list will be empty if enough primes are present
    {
        //check if current i is prime
        loop p in primes
            if i % p =? 0 continue #loop1
        
        primes.append(i)    //add to list of primes
    }
}


combine_pfactors([].dict dict1, [].dict dict2)
{
    combined = [].dict
    
    loop k1 in dict1.keys
    {
        combined.add(k1, dict1[k1])
        if dict2.contains(k1)
            combined[k1] += abs(dict1[k1] - dict2[k1]
    }
}


/{
//example of a match statement
    match (list1.length, list2.length) // ->this might be a tuple or a list?
    {
        (0, 0) { return [int].dll }
        (0, ?) { return list2.copy }
        (?, 0) { return list1.copy }
    }
}/    
