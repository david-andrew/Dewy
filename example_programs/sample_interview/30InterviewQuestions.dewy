//questions taken from https://javarevisited.blogspot.com/2011/06/top-programming-interview-questions.html
//also look at https://www.reddit.com/r/cscareerquestions/comments/20ahfq/heres_a_pretty_big_list_of_programming_interview/


//1) check if a string is a palindrome
is_palindrome(string s)
{
	l = s.length()
	return s[0:l/2] =? s[-0:-l/2] //dewy should be able to handle fractional indexing correctly
}

//alternate
// return s =? s[-0:0]



//2) remove character from string
remove_char(char c, string s) //note that char c is still a string, it just enforces that the length is 1. i.e. "c[0]" returns the char, as does "c"
{

	loop i=0, i < s.length()
	{
		if s[i] =? c s.remove(i)
		else i+=1
	}
}


//9) missing number from array
find_missing([] arr)
{
	loop i in 1:100 if i not in arr return i
}

//time complexity of above is (1+2+3+...+100)/2 = 2525 on average
 
//faster versions
find_missing(arr)
{
	//don't need because bool[1:100] specifies first index is 1 and last index is 100 //set indexing_mode = 1 // if didn't want to set the array indices
	found = bool[1:100].init(false) //don't actually need init here, since the default value is false, but just showing how it works
	loop i in 1:100 found[arr[i]] = true
	loop i in 1:100 if not found[i] return i
}